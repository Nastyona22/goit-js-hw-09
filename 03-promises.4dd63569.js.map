{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAGvC,IAAIC,EAAiB,EAyCrBH,EAAQI,iBAAiB,UApCNC,IACjBA,EAAMC,iBAEN,MAAQC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IAC7BL,EAAMM,cAGV,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOG,MAAOD,GAAK,EAAG,CACxCT,GAAoB,EACpB,MAAMW,EAAiBC,OAAOP,EAAMK,OAASE,OAAON,EAAKI,MAAOD,GAEhE,SAASI,EAAcC,EAAkBC,GAEzC,MAAMC,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAyBC,QAEpDM,EAAK,sBAAoBP,QAAuBC,OAAoB,GAEvEA,EAAe,G,CAI1BF,EAAcb,EAAkBW,GAC7BY,MAAKC,GAAU7B,EAAA8B,OAAOC,QAAQF,KAC9BG,OAAMH,GAAU7B,EAAA8B,OAAOG,QAAQJ,I","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\n\nlet numberOfPosition=0;\n\n\n\n\nconst actPromise = event => {\n  event.preventDefault();\n\n  const { elements: { delay, step, amount },\n  } = event.currentTarget;\n \n \n  for (let i = 0; i < amount.value; i += 1) {\n    numberOfPosition += 1;\n    const delayForNotify = Number(delay.value) + Number(step.value *i);\n    \n    function createPromise(numberOfPosition, delayForNotify) {\n  \n    const shouldResolve = Math.random() > 0.3;\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (shouldResolve) {\n            resolve(`✅ Fulfilled promise ${numberOfPosition} in ${delayForNotify} ms`);\n          } else {\n            reject(`❌ Rejected promise ${numberOfPosition} in ${delayForNotify} ms`);\n          }\n        }, delayForNotify);\n      });\n    };\n\ncreatePromise(numberOfPosition, delayForNotify)\n  .then(result => Notify.success(result))\n  .catch(result => Notify.failure(result));\n    \n  };\n\n\n}\n  \n\n  \nformRef.addEventListener('submit', actPromise);\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$numberOfPosition","addEventListener","event","preventDefault","elements","delay","step","amount","currentTarget","i","value","delayForNotify1","Number","createPromise","numberOfPosition1","delayForNotify","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","result","Notify","success","catch","failure"],"version":3,"file":"03-promises.4dd63569.js.map"}